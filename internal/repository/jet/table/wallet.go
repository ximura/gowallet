//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Wallet = newWalletTable("public", "wallet", "")

type walletTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	Account   postgres.ColumnString
	Amount    postgres.ColumnInteger
	Currency  postgres.ColumnString
	UpdatedAt postgres.ColumnTimestampz
	CreatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type WalletTable struct {
	walletTable

	EXCLUDED walletTable
}

// AS creates new WalletTable with assigned alias
func (a WalletTable) AS(alias string) *WalletTable {
	return newWalletTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WalletTable with assigned schema name
func (a WalletTable) FromSchema(schemaName string) *WalletTable {
	return newWalletTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WalletTable with assigned table prefix
func (a WalletTable) WithPrefix(prefix string) *WalletTable {
	return newWalletTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WalletTable with assigned table suffix
func (a WalletTable) WithSuffix(suffix string) *WalletTable {
	return newWalletTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWalletTable(schemaName, tableName, alias string) *WalletTable {
	return &WalletTable{
		walletTable: newWalletTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newWalletTableImpl("", "excluded", ""),
	}
}

func newWalletTableImpl(schemaName, tableName, alias string) walletTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		AccountColumn   = postgres.StringColumn("account")
		AmountColumn    = postgres.IntegerColumn("amount")
		CurrencyColumn  = postgres.StringColumn("currency")
		UpdatedAtColumn = postgres.TimestampzColumn("updated_at")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, AccountColumn, AmountColumn, CurrencyColumn, UpdatedAtColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{AccountColumn, AmountColumn, CurrencyColumn, UpdatedAtColumn, CreatedAtColumn}
	)

	return walletTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Account:   AccountColumn,
		Amount:    AmountColumn,
		Currency:  CurrencyColumn,
		UpdatedAt: UpdatedAtColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
